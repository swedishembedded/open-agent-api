openapi: "3.0.3"
info:
  title: Open Agent API
  description: |
    An API for creating and interacting with AI agents, including chat completions,
    autonomous agents with tool usage, multi-agent teams, knowledge base search,
    and optional billing integration.
    Clients can authenticate via magic link or OAuth2 to obtain a token, or use API keys.
  version: "0.6.0"
servers:
  - url: https://localhost:8007/v1
    description: Local API
  - url: https://api.swedishembedded.com/v1
    description: Swedish Embedded API
  - url: https://api.agentsven.com/v1
    description: Agentsven API
tags:
  - name: Authentication
    description: Endpoints for user authentication (magic link, OAuth)
  - name: Account
    description: Endpoints for managing user accounts
  - name: Agents
    description: Manage and interact with individual agents
  - name: Teams
    description: Group agents into teams for collaborative responses
  - name: Chat
    description: Low-level chat completions (OpenAI-compatible)
  - name: Knowledge
    description: Semantic knowledge base search
  - name: Billing
    description: Stripe webhook endpoints and billing info (optional)
  - name: MCP
    description: Model Context Protocol

paths:
  /:
    get:
      summary: Root
      operationId: root__get
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
                title: Response Root Get

  /health:
    get:
      summary: Health
      operationId: health_health_get
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
                title: Response Health Health Get

  ########################
  # Authentication Paths #
  ########################
  /auth/link:
    $ref: "./paths/auth/link.yaml"

  /auth/link/verify/{token}:
    $ref: "./paths/auth/link/verify.yaml"

  /auth/link/status/{token}:
    $ref: "./paths/auth/link/status.yaml"

  /auth/oauth/{provider}:
    $ref: "./paths/auth/oauth/provider.yaml"

  /auth/oauth/{provider}/callback:
    $ref: "./paths/auth/oauth/provider.callback.yaml"

  /auth/oauth/device-token:
    $ref: "./paths/auth/oauth/device-token.yaml"

  ################
  # Agents Paths #
  ################
  /agents:
    $ref: "./paths/agents.yaml"
  /agents/{agentId}:
    $ref: "./paths/agents.agentId.yaml"
  /agents/{agentId}/run:
    $ref: "./paths/agents.agentId.run.yaml"

  #################
  # Account Paths #
  #################
  /account:
    $ref: "./paths/account/account.yaml"
  /account/balance:
    $ref: "./paths/account/balance.yaml"
  /account/topup:
    $ref: "./paths/account/topup.yaml"
  /account/plans:
    $ref: "./paths/account/plans.yaml"
  /account/plans/{plan_id}:
    $ref: "./paths/account/plans/planId.yaml"
  /account/keys:
    $ref: "./paths/account/keys.yaml"
  /account/keys/{key_id}:
    $ref: "./paths/account/keys.keyId.yaml"
  /account/keys/{key_id}/usage:
    $ref: "./paths/account/keys.keyId.usage.yaml"

  /mcp/:
    $ref: "./paths/mcp/mcp.yaml"

  /mcp/sse:
    $ref: "./paths/mcp/sse.yaml"

  /mcp/messages:
    $ref: "./paths/mcp/messages.yaml"

  ##############
  # Teams Paths#
  ##############
  /teams:
    $ref: "./paths/teams.yaml"
  /teams/{teamId}:
    $ref: "./paths/teams/teamId.yaml"
  /teams/{teamId}/run:
    $ref: "./paths/teams/teamId.run.yaml"

  #####################
  # Tools functions   #
  #####################
  /tools:
    get:
      tags: [Tools]
      summary: List tools
      description: |
        List all toolkits available to the user.

        Toolkits can be included in teams and agents giving agent access to specific tools.
      operationId: get_tools
      security:
        - ApiKey: []
      responses:
        "200":
          description: List of tools.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AgentToolkitSummary"

  /tools/{tool_id}:
    get:
      tags: [Tools]
      summary: Get tool details
      description: Get details of a specific tool
      security:
        - ApiKey: []
      parameters:
        - name: tool_id
          in: path
          required: true
          schema:
            type: string
            description: The ID of the tool
      responses:
        "200":
          description: Tool details.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ExternalTool"
        "404":
          description: Tool not found.
        "401":
          description: Unauthorized.
    delete:
      tags: [Tools]
      summary: Delete a tool
      description: Delete a tool
      security:
        - ApiKey: []
      parameters:
        - name: tool_id
          in: path
          required: true
          schema:
            type: string
            description: The ID of the tool
      responses:
        "200":
          description: Tool deleted.
        "404":
          description: Tool not found.
        "401":
          description: Unauthorized.

  #####################
  # Stripe Webhook    #
  #####################
  /stripe/webhook:
    post:
      tags: [Billing]
      summary: Stripe webhook endpoint
      description: |
        Webhook endpoint to receive events from Stripe.
        Verifies Stripe signature and processes events like invoice.paid, subscription created, etc.
        **Note:** This endpoint is typically unauthenticated (Stripe posts to it), but secured by verifying signatures.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object # The exact schema depends on Stripe's event format; Stripe sends an 'event' object.
      responses:
        "200":
          description: Webhook received successfully (Stripe requires a 2xx to not retry).
        "400":
          description: Bad signature or event (ignored).
        "500":
          description: Server error.
  ###################
  # Chat Completion #
  ###################
  /chat/completions:
    post:
      tags: [Chat]
      summary: Create a chat completion (OpenAI-compatible)
      description: |
        Create a completion for a chat conversation, given a model and messages.
        This endpoint is designed to be compatible with OpenAI's /v1/chat/completions.
      security:
        - ApiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ChatCompletionRequest"
      responses:
        "200":
          description: Successful chat completion (non-streaming)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ChatCompletionResponse"
            text/event-stream:
              schema:
                type: string
                format: binary
                description: |
                  Streamed chat completion. The response is sent as an SSE stream where each
                  event's data field is a JSON message (partial completion or final completion).
                  The stream ends with a [DONE] event or when the completion is finished.
        "401":
          description: Unauthorized (invalid or missing API key)
        "400":
          description: Bad request (e.g., invalid model or parameters)

  /models:
    get:
      tags:
        - Chat
      summary: List Models
      description: List available models by forwarding the request to OpenAI.
      operationId: list_models_v1_models_get
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema: {}
      security:
        - ApiKey: []

  /account/plans/{plan_id}/checkout:
    get:
      tags:
        - subscription
      security:
        - BearerAuth: []
      summary: Get Checkout URL
      description: Get the checkout URL for a specific subscription plan.
      operationId: get_checkout_url_subscription_plans__plan_id__checkout_get
      parameters:
        - name: plan_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckoutSessionInfo"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"

  /account/plans/{plan_id}/purchase:
    post:
      tags:
        - subscription
      summary: Create Subscription
      description: Create a new subscription for the current user.
      operationId: create_subscription_subscription_subscribe_post
      parameters:
        - name: plan_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AccountSubscriptionPurchase"
        required: true
      responses:
        "201":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSubscriptionInfo"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
      security:
        - BearerAuth: []

  /account/subscriptions:
    get:
      tags:
        - subscription
      summary: Get Current Subscriptions
      description: Get the current user's active subscription.
      operationId: get_current_subscription_subscription_current_get
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/AccountSubscriptionInfo"
      security:
        - BearerAuth: []

  /account/subscriptions/{subscription_id}:
    get:
      tags:
        - subscription
      summary: Get Subscription
      description: Get details of a specific subscription.
      operationId: get_subscription_subscription_subscription_id_get
      parameters:
        - name: subscription_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountSubscriptionInfo"
        "422":
          description: Validation Error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ValidationError"
      security:
        - BearerAuth: []

    delete:
      tags:
        - subscription
      summary: Cancel Subscription
      description: Cancel the current user's subscription at the end of the billing period.
      operationId: cancel_subscription_subscription_cancel_post
      parameters:
        - name: subscription_id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserSubscriptionResponse"
      security:
        - BearerAuth: []

  /account/subscription/webhook:
    post:
      tags:
        - subscription
      summary: Stripe Webhook
      description: Handle Stripe webhook events.
      operationId: stripe_webhook_subscription_webhook_post
      responses:
        "200":
          description: Successful Response
          content:
            application/json:
              schema:
                additionalProperties:
                  type: string
                type: object
                title: Response Stripe Webhook Subscription Webhook Post

components:
  securitySchemes:
    ApiKey:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authenticating requests
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: >
        Use a Bearer token for authorization. This can be an API key (for direct API access) or a JWT obtained via login.
  schemas:
    AccountInfo:
      $ref: "./schemas/account/AccountInfo.yaml"
    AccountBalanceInfo:
      $ref: "./schemas/account/AccountBalanceInfo.yaml"
    AccountSubscriptionInfo:
      $ref: "./schemas/account/AccountSubscriptionInfo.yaml"
    AccountSubscriptionPurchase:
      $ref: "./schemas/account/AccountSubscriptionPurchase.yaml"

    AgentEnvironment:
      $ref: "./schemas/agent/AgentEnvironment.yaml"
    ToolkitFunction:
      $ref: "./schemas/ToolkitFunction.yaml"

    AgentToolkitSummary:
      type: object
      description: |
        A short summary of a toolkit that includes only the name, instructions and function names without including detailed function descriptions.
      required:
        - name
        - instructions
        - functions
      properties:
        name:
          type: string
          description: The name of the tool
        instructions:
          type: string
          description: Optional instructions for the toolkit
        functions:
          type: array
          default: []
          items:
            type: string
          description: The functions of the tool

    Toolkit:
      $ref: "./schemas/Toolkit.yaml"

    ExternalTool:
      type: object
      required:
        - name
        - description
        - parameters
        - execute
      properties:
        type:
          type: string
          enum: [mcp]
          description: The type of tool
        name:
          type: string
          description: The name of the tool
        url:
          type: string
          description: The URL endpoint for the external tool
        api_key:
          type: string
          description: The API key for the external tool

    AgentMessageToolCall:
      $ref: "./schemas/message/AgentMessageToolCall.yaml"

    AgentMessage:
      $ref: "./schemas/agent/AgentMessage.yaml"

    AuthMagicLinkRequest:
      $ref: "./schemas/auth/AuthMagicLinkRequest.yaml"

    AuthLoginResponse:
      type: object
      required:
        - jwt_token
        - expires_at
        - verified
      properties:
        jwt_token:
          type: string
          description: JWT token for authentication
        expires_at:
          type: string
          format: date-time
          description: Expiration timestamp of the token
        verified:
          type: boolean
          description: Whether the email has been verified

    ToolCall:
      $ref: "./schemas/ToolCall.yaml"

    ToolCallResult:
      $ref: "./schemas/ToolCallResult.yaml"

    ChatCompletionRequest:
      type: object
      required: [model, messages]
      properties:
        model:
          type: string
          description: ID of the model to use for completion (e.g., gpt-3.5-turbo).
        messages:
          type: array
          items:
            $ref: "#/components/schemas/AgentMessage"
        temperature:
          type: number
          format: float
          default: 1.0
          description: Sampling temperature.
        top_p:
          type: number
          format: float
          default: 1.0
          description: Nucleus sampling probability.
        n:
          type: integer
          default: 1
          description: Number of completions to generate.
        stream:
          type: boolean
          default: false
          description: Whether to stream the response as events. If true, SSE should be used.
        stop:
          oneOf:
            - type: string
            - type: array
              items:
                type: string
          description: Stop sequence(s) to halt generation.
        max_tokens:
          type: integer
          description: Maximum tokens to generate in the completion.
        presence_penalty:
          type: number
          default: 0
        frequency_penalty:
          type: number
          default: 0
        user:
          type: string
          description: Optional user identifier (for auditing or context).
    ChatCompletionResponse:
      type: object
      properties:
        id:
          type: string
          description: Unique ID for the completion.
        object:
          type: string
          example: chat.completion
        created:
          type: integer
          description: Unix timestamp of completion creation.
        model:
          type: string
        choices:
          type: array
          items:
            type: object
            properties:
              index:
                type: integer
              message:
                $ref: "#/components/schemas/AgentMessage"
              finish_reason:
                type: string
                description: e.g. stop, length, etc.
        usage:
          $ref: "#/components/schemas/ChatCompletionUsage"

    AgentMessageMetrics:
      $ref: "./schemas/message/AgentMessageMetrics.yaml"

    AgentMessageReferences:
      $ref: "./schemas/message/AgentMessageReferences.yaml"

    AgentMessageCitations:
      $ref: "./schemas/message/AgentMessageCitations.yaml"

    UrlCitation:
      $ref: "./schemas/message/citations/UrlCitation.yaml"

    DocumentCitation:
      $ref: "./schemas/message/citations/DocumentCitation.yaml"

    RunStartedEvent:
      $ref: "./schemas/events/RunStartedEvent.yaml"

    ToolCallStartedEvent:
      $ref: "./schemas/events/ToolCallStartedEvent.yaml"

    ToolCallCompletedEvent:
      $ref: "./schemas/events/ToolCallCompletedEvent.yaml"

    RunCompletedEvent:
      $ref: "./schemas/events/RunCompletedEvent.yaml"

    RunResponseEvent:
      $ref: "./schemas/events/RunResponseEvent.yaml"

    File:
      $ref: "./schemas/File.yaml"

    Image:
      $ref: "./schemas/Image.yaml"

    TeamRunResponse:
      $ref: "./schemas/team/TeamRunResponse.yaml"

    Media:
      $ref: "./schemas/Media.yaml"

    Video:
      $ref: "./schemas/Video.yaml"

    Agent:
      $ref: "./schemas/Agent.yaml"

    Team:
      $ref: "./schemas/Team.yaml"

    TeamMessageCitations:
      $ref: "./schemas/team/message/Citations.yaml"

    TeamMessage:
      $ref: "./schemas/team/TeamMessage.yaml"

    TeamRunRequest:
      $ref: "./schemas/team/TeamRunRequest.yaml"

    CostSummary:
      $ref: "./schemas/CostSummary.yaml"

    CostSummaryEvent:
      $ref: "./schemas/events/CostSummaryEvent.yaml"

    AgentCompletionRequest:
      $ref: "./schemas/agent/AgentCompletionRequest.yaml"

    AgentCompletionResponse:
      $ref: "./schemas/agent/AgentCompletionResponse.yaml"

    AgentCompletionChunk:
      $ref: "./schemas/agent/AgentCompletionChunk.yaml"

    ValidationError:
      $ref: "./schemas/ValidationError.yaml"

    UserSubscriptionCreate:
      properties:
        user_id:
          type: string
          format: uuid
          title: User Id
        plan_id:
          type: string
          format: uuid
          title: Plan Id
      type: object
      required:
        - user_id
        - plan_id
      title: UserSubscriptionCreate

    SubscriptionStatus:
      type: string
      enum:
        - active
        - canceled
        - past_due
        - trialing
        - unpaid
      title: SubscriptionStatus

    UserSubscriptionResponse:
      properties:
        id:
          type: string
          format: uuid
          title: Id
        user_id:
          type: string
          format: uuid
          title: User Id
        plan_id:
          type: string
          format: uuid
          title: Plan Id
        status:
          $ref: "#/components/schemas/SubscriptionStatus"
        stripe_customer_id:
          anyOf:
            - type: string
          title: Stripe Customer Id
        stripe_subscription_id:
          anyOf:
            - type: string
          title: Stripe Subscription Id
        current_period_start:
          anyOf:
            - type: string
              format: date-time
          title: Current Period Start
        current_period_end:
          anyOf:
            - type: string
              format: date-time
          title: Current Period End
        cancel_at_period_end:
          type: boolean
          title: Cancel At Period End
          default: false
        created_at:
          type: string
          format: date-time
          title: Created At
        updated_at:
          type: string
          format: date-time
          title: Updated At
      type: object
      required:
        - id
        - user_id
        - plan_id
        - status
        - created_at
        - updated_at
      title: UserSubscriptionResponse

    ServerSetupRequest:
      properties:
        stripe_api_key:
          anyOf:
            - type: string
          title: Stripe Api Key
        stripe_webhook_secret:
          anyOf:
            - type: string
          title: Stripe Webhook Secret
      type: object
      title: ServerSetupRequest
      description: Request model for server initial setup.

    ServerSetupResponse:
      properties:
        status:
          type: string
          title: Status
        message:
          type: string
          title: Message
        configured_keys:
          additionalProperties:
            type: boolean
          type: object
          title: Configured Keys
      type: object
      required:
        - status
        - message
        - configured_keys
      title: ServerSetupResponse
      description: Response model for server setup.

    OAuthAuthorizationResponse:
      $ref: "./schemas/auth/OAuthAuthorizationResponse.yaml"

    OAuthDeviceCodeResponse:
      $ref: "./schemas/auth/OAuthDeviceCodeResponse.yaml"

    OAuthDeviceCodeRequest:
      $ref: "./schemas/auth/OAuthDeviceCodeRequest.yaml"

    OAuthCallbackResponse:
      $ref: "./schemas/auth/OAuthCallbackResponse.yaml"

    ApiKeyCreationRequest:
      $ref: "./schemas/auth/ApiKeyCreationRequest.yaml"

    ApiKeyInfo:
      $ref: "./schemas/auth/ApiKeyInfo.yaml"

    AccountUpdateRequest:
      type: object
      properties:
        name:
          type: string
          title: Name
          description: The name of the user account
        username:
          type: string
          title: Username
          description: The username of the user account

    ApiKeyUsageResponse:
      type: object
      required:
        - usage_data
      properties:
        usage_data:
          type: object
          description: Detailed usage statistics for the API key
          properties:
            total_requests:
              type: integer
              title: Total Requests
              description: Total number of API requests made with this key
            total_tokens:
              type: integer
              title: Total Tokens
              description: Total number of tokens consumed by this key
            monthly_requests:
              type: integer
              title: Monthly Requests
              description: Number of API requests made this month
            monthly_tokens:
              type: integer
              title: Monthly Tokens
              description: Number of tokens consumed this month
            billing_info:
              type: object
              description: Billing information for the API key
              properties:
                stripe_customer_id:
                  type: string
                  title: Stripe Customer ID
                stripe_subscription_id:
                  type: string
                  title: Stripe Subscription ID
                current_period_start:
                  type: string
                  format: date-time
                  title: Current Period Start
                current_period_end:
                  type: string
                  format: date-time
                  title: Current Period End
                cancel_at_period_end:
                  type: boolean
                  title: Cancel At Period End
                  default: false
                created_at:
                  type: string
                  format: date-time
                  title: Created At
                updated_at:
                  type: string
                  format: date-time
                  title: Updated At
        time_series:
          type: array
          description: Time-series data when group_by parameter is used
          items:
            type: object
            properties:
              date:
                type: string
                format: date
                description: Date for this data point
              requests:
                type: integer
                description: Number of requests
              tokens:
                type: integer
                description: Number of tokens
              cost:
                type: number
                format: float
                description: Cost for this period
      title: ApiKeyUsageResponse

    CheckoutSessionRequest:
      type: object
      required:
        - plan_id
      properties:
        success_url:
          type: string
          description: The URL to redirect to after the checkout session is completed
        cancel_url:
          type: string
          description: The URL to redirect to if the checkout session is canceled

    CheckoutSessionInfo:
      type: object
      required:
        - checkout_url
        - session_id
      properties:
        checkout_url:
          type: string
          description: The checkout URL for the subscription plan
        session_id:
          type: string
          description: The ID of the checkout session

    ChatCompletionUsage:
      $ref: "./schemas/message/AgentMessageMetrics.yaml"

    TeamUsageInfo:
      $ref: "./schemas/message/AgentMessageMetrics.yaml"

    AccountUsageInfo:
      $ref: "./schemas/account/AccountUsageInfo.yaml"

    AccountUsageInfoItem:
      $ref: "./schemas/account/AccountUsageInfoItem.yaml"

    AccountPortalSessionCreatedResponse:
      $ref: "./schemas/account/AccountPortalSessionCreatedResponse.yaml"
